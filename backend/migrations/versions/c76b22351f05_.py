"""empty message

<<<<<<< HEAD:backend/migrations/versions/20250512_212030_.py
Revision ID: ffdc0a98111c
=======
Revision ID: c76b22351f05
>>>>>>> refs/remotes/origin/staging:backend/migrations/versions/c76b22351f05_.py
Revises:
Create Date: 2025-05-20 00:53:48.235696

"""

from alembic import op
import sqlalchemy as sa

import os

environment = os.getenv("FLASK_ENV")
SCHEMA = os.environ.get("SCHEMA")

# revision identifiers, used by Alembic.
<<<<<<< HEAD:backend/migrations/versions/20250512_212030_.py
revision = "ffdc0a98111c"
=======
revision = "c76b22351f05"
>>>>>>> refs/remotes/origin/staging:backend/migrations/versions/c76b22351f05_.py
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("username", sa.String(length=40), nullable=False),
        sa.Column("email", sa.String(length=255), nullable=False),
        sa.Column("hashed_password", sa.String(length=255), nullable=False),
        sa.Column("first_name", sa.String(length=30), nullable=False),
        sa.Column("last_name", sa.String(length=30), nullable=False),
        sa.Column("prefered_name", sa.String(length=30), nullable=True),
        sa.Column("profile_img", sa.String(), nullable=True),
        sa.Column("about", sa.String(length=300), nullable=True),
        sa.Column("phone", sa.String(length=14), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
        sa.UniqueConstraint("username"),
    )
    op.create_table(
        "servers",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=30), nullable=False),
<<<<<<< HEAD:backend/migrations/versions/20250512_212030_.py
        sa.Column("private", sa.Boolean(), nullable=False),
        # sa.Column("admin", postgresql.ARRAY(sa.String()), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
=======
>>>>>>> refs/remotes/origin/staging:backend/migrations/versions/c76b22351f05_.py
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "channels",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=30), nullable=False),
        sa.Column("server_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["server_id"],
            ["servers.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "user_servers",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("server_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["server_id"],
            ["servers.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("user_id", "server_id"),
    )
    op.create_table(
        "channel_messages",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("body", sa.String(length=300), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("channel_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["channel_id"],
            ["channels.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "channel_message_images",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("img_url", sa.String(length=300), nullable=True),
        sa.Column("channel_message_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["channel_message_id"],
            ["channel_messages.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "channel_message_reactions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("channel_message_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["channel_message_id"],
            ["channel_messages.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###
    if environment == "production":
        op.execute(f"ALTER TABLE users SET SCHEMA {SCHEMA};")
        op.execute(f"ALTER TABLE servers SET SCHEMA {SCHEMA};")
        op.execute(f"ALTER TABLE channels SET SCHEMA {SCHEMA};")
        op.execute(f"ALTER TABLE user_servers SET SCHEMA {SCHEMA};")
        op.execute(f"ALTER TABLE channel_messages SET SCHEMA {SCHEMA};")
        op.execute(f"ALTER TABLE channel_message_images SET SCHEMA {SCHEMA};")
        op.execute(f"ALTER TABLE channel_message_reactions SET SCHEMA {SCHEMA};")


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("channel_message_reactions")
    op.drop_table("channel_message_images")
    op.drop_table("channel_messages")
    op.drop_table("user_servers")
    op.drop_table("channels")
    op.drop_table("servers")
    op.drop_table("users")
    # ### end Alembic commands ###
